
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN ASSIGNS ELSE GREATER ID IF INCREMENT INT LBRACE LESS LPAREN NUM RBRACE RPAREN SEMICOLON STRING\n    statement : conditional_structure\n    conditional_structure : IF LPAREN condition RPAREN LBRACE declaration RBRACE ELSE LBRACE increment_statement RBRACEcondition : ID LESS NUM\n                 | ID GREATER NUM\n                 | ID ASSIGNS NUMdeclaration : INT ID ASSIGN NUM SEMICOLONincrement_statement : ID INCREMENT SEMICOLON'
    
_lr_action_items = {'IF':([0,],[3,]),'$end':([1,2,26,],[0,-1,-2,]),'LPAREN':([3,],[4,]),'ID':([4,16,21,],[6,18,24,]),'RPAREN':([5,12,13,14,],[7,-3,-4,-5,]),'LESS':([6,],[8,]),'GREATER':([6,],[9,]),'ASSIGNS':([6,],[10,]),'LBRACE':([7,19,],[11,21,]),'NUM':([8,9,10,20,],[12,13,14,22,]),'INT':([11,],[16,]),'RBRACE':([15,23,25,28,],[17,26,-6,-7,]),'ELSE':([17,],[19,]),'ASSIGN':([18,],[20,]),'SEMICOLON':([22,27,],[25,28,]),'INCREMENT':([24,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'conditional_structure':([0,],[2,]),'condition':([4,],[5,]),'declaration':([11,],[15,]),'increment_statement':([21,],[23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> conditional_structure','statement',1,'p_statement','SintacticoIF.py',71),
  ('conditional_structure -> IF LPAREN condition RPAREN LBRACE declaration RBRACE ELSE LBRACE increment_statement RBRACE','conditional_structure',11,'p_conditional_structure','SintacticoIF.py',75),
  ('condition -> ID LESS NUM','condition',3,'p_condition','SintacticoIF.py',78),
  ('condition -> ID GREATER NUM','condition',3,'p_condition','SintacticoIF.py',79),
  ('condition -> ID ASSIGNS NUM','condition',3,'p_condition','SintacticoIF.py',80),
  ('declaration -> INT ID ASSIGN NUM SEMICOLON','declaration',5,'p_declaration','SintacticoIF.py',84),
  ('increment_statement -> ID INCREMENT SEMICOLON','increment_statement',3,'p_increment_statement','SintacticoIF.py',87),
]
